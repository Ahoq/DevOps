<!DOCTYPE html>
<html>
    <head>
<!--include subhead.txt -->
        <title>
            Our Testing Implementation
        </title>
<!--include googleAnalyticsScript.txt -->
    </head>

    <body>
      <div class="wrapper">
<!--include navbar.txt -->
          <div id="content">
            <h1>
                Our Testing Implementation
            </h1>

            <p>
                <h3>We have decided to move forward with Jenkins for our CI pipeline.</h3>
                <h3>Installation</h3>
                Applications like Jenkins can be downloaded as read-only "images" (or Docker images), each of which is run in Docker as a container. Since we have already downloaded docker in first class, understanding this installation of Jenkins shall be easier.<br>

                <a href="https://jenkins.io/doc/book/installing/">Jenkins</a> recommends using  <a href="https://hub.docker.com/r/jenkinsci/blueocean/">jenkinsci/blueocean</a> image (from the Docker Hub repository).

                This image is for Jenkins LTS and comes bundled with all Blue Ocean plugins so they don't have to be downloaded separately.
                <br>
                Details for downloading Jenkins Docker Image MacOS/linux/Windows can be found <a href="https://jenkins.io/doc/book/installing/">here</a>
            </p>

                <br>
                <h3>Here's another simpler way of Trigerring a Jenkins build from a push to Github.</h3>
                One of the reasons to choose Jenkins was the availability of many plugins. <br>
                One such plugin is the <a href="https://wiki.jenkins.io/display/JENKINS/GitHub+Integration+Plugin">Github Integration Plugin</a>

                <ul>
                    <li>
                    <b>Step 1: Install Github Integration Plugin</b><br>
                    It can be accessed through Plugin Manager under 'available' tab or simply through search box.
                    After checking against the plugin, click on 'Download Now'.
                    </li>

                    <li>
                    <b> Step 2: Prepare Github Repository</b><br>
                    We now need to add service to call Jenkins Github webhook on a push.
                    Inside the github repo, go to Settings - Integrations & Services - Add service <br>
                    Select Jenkins(Github Integration) from drop-down menu.
                    In the new window, enter "Jenkins Hook URL+ "/github-webhook/"
                    e.g. http://ci.jenkins-ci.org/github-webhook/ <br>
                    Click on "test service"
                    </li>

                    <li>
                    <b>Step 3: Give repo access to Jenkins User</b><br>
                    This is a very important step. There are several ways to do so.<br>
                    1. use github OAuth plugin. <br>
                    2. Store plain-text user/password combo on Github
                    <br>
                    To be further discussed..
                    </li>
                </ul>
            
          </div>
        </div>
    </body>
</html>
