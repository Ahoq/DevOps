<!DOCTYPE html>
<html>
    <head>
<!--include subhead.txt -->
        <title>
            The DevOps Handbook
        </title>
<!--include googleAnalyticsScript.txt -->
    </head>

    <body>
      <div class="wrapper">
<!--include navbar.txt -->
          <div id="content">
            <h1>
                Implementing Lean Software Development
            </h1>
            <p class="author">
                Authors: Mary and Tom Poppendieck, Jeff Sutherland, and Kent Beck
                <br>
                Reviewers: Chaoqun Huang, Qiwei Zhou
            </p>

            <p>
              This book is mainly about the Poppendiecks' unparalleled experience helping
              development organizations optimize the entire software value stream.
            </p>

            <p>
              This book uses Toyota and its "make it when need it" idea to illustrate the 
              modern ways of developing softwares.
            </p>
            <details>
              <summary class="sum2">
                Chapter 1: History
              </summary>
              <p>
                The book starts with historical stories about Toyota Production System which, according to the designer Taiichi Ohno, was designed to eliminate waster abosulutely. One of the writer was working in a cassette plant when Japanese competitors entered the market with a much lower price. She described her experience about how she adopted the idea as an example of how lean production works before the term was invented.
                According to the writer, the key to a successful lean production is to put the Just-in-Time flow and stop-the-line together. Next, She talked about lean supply chain, lean product development and finally, lean software development.
                This chapter gives an insightful view about how the term 'lean' was introduced and how it is gradually accepted into the modern enterprises. There are plenty of stories and facts cited in this chapter. The way the author organizes the contents is brilliant and inspiring. 
              </p>
            </details>
            <details>
              <summary class="sum2">
                Chapter 2: Principles
              </summary>
              <p>
                This chapter talks about the senven principles of lean software development. The writers not only give detailed explanation on what the principles mean, they also provide a 'Myth' section after each principle, discussing one common wrong understanding of the principle. The book starts by pointing out the most important character of software development - software changes very often. It also claims that it assumes the development process should be empirical - have a high-level concept in mind and then apply feedback-driven methods to implement the concept.
                The seven principles of lean software development the book states are:
                <ul>
                  <li>
                    Eliminate all nonvalue-adding waste: These wastes are generally partially done work, churns and unused feature.
                  </li>
                  <li>
                    Build Quality In: Fix defects as soon as you find them. Write GOOD code the first time. Test-driven development is recommended.
                  </li>
                  <li>
                    Create Knowledge: When we are implementing what we have planned to do, we tend to find problems or better ways. We should make good use of these knowledge instead of sticking to the plan.
                  </li>
                  <li>
                    Defer Commitment: Make vital decisions only before it is too late because at that time you have the most information on which to chooose. We can't make our software completely flexible but we should make it be able to change at several crucial points. Do NOT go too far with an assumption.
                  </li>
                  <li>
                    Deliver Fast: Because if you deliver fast, your customers don't have the time to change their requirements. You can also receive more feedback from them.
                  </li>
                  <li>
                    Respect People: There is no process that cannot be improved. 
                  </li>
                  <li>
                    Optimize the Whole: Make measurements on high-level instead of low-level
                  </li>
                </ul>
              </p>
            </details>
          </div>
        </div>
    </body>
</html>
